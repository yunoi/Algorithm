"""
실전문제 4
1이 될 때까지: 어떠한 수 N이 1이 될 때까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고 한다.
단, 두 번째 연산은 N이 K로 나누어떨어질 때만 선택할 수 있다.

1. N에서 1을 뺀다.
2. N을 K로 나눈다.

N과 K가 주어질 때 N이 1이 될 때까지 1번 혹은 번의 과정을 수행해야하는 최소 횟수를 구하는 프로그램을 작성하시오.

HINT: 최대한 많이 나누기

[입력조건]
첫째 줄에 N(1<= N <= 100,000)과 K(2 <= K <= 100,000)가 공백으로 구분되며 각각 자연수로 주어진다. 이떄 입력으로 주어지는 N은 항상 K보다 크거나 같다.
첫째 줄에 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 횟수의 최솟값을 출력한다.
"""

#방법 1
"""
n, k = map(int, input().split())
result = 0

# n이 k이상이라면 k로 계속 나누기
while n >= k:
    # n이 k로 나누어 떨어지지 않는다면 n에서 1씩 빼기
    while n % k != 0:
        n -= 1
        result += 1

    # k로 나누기
    n //= k
    result += 1
    
#마지막으로 남은 수에 대하여 1씩 더하기
while n > 1:
    n -= 1
    result += 1
    
print(result)
"""

#방법 2
n, k = map(int, input().split())
result =0

while True:
    #n == k 로 나누어떨어지는 수가 될 때까지 1씩 빼기
    target = (n // k) * k
    result += (n - target)
    n = target

    #n이 k보다 적을 때(더 이상 나눌 수 없을 때) 반복문 탈출
    if(n<k):
        break

    #k로 나누기
    result += 1
    n //= k

#마지막으로 남은 수에 대하여 1씩 빼기
result += (n-1)
print(result)
"""
챕터 08 다이나믹 프로그래밍

식량창고 N

첫째 줄에 식량창고의 개수 N이 주어진다. (3 <= N <= 100)
둘째 줄에 공백으로 구분되어 각 식량창고에 저장된 식량의 개수 K가 주어진다 ( 0 <= K <= 1000)

첫쩨 줄에 개미 전사가 얻을 수 있는 식량의 최댓값을 출력

털때 최소한 한 칸 이상 떨어진 식량창고 약탈 필요


TIP
i번째 식량창고를 털기고 결정한 경우 현재의 식량창고를 털 수 없다.
i-1번째 식량창고를 털기로 결정한 경우 현재의 식량창고를 털 수 있다.

둘 중 더 많은 식량을 털 수 있는 경우를 선택하면 된다.
따라서 i번째 식량창고에 있는 식량의 양이 k1라고 했을 때 점화식은 다음과 같다.
d[i] = max(d[i-1], d[i-2]+k1)


"""


n = int(input())

array = list(map(int, input().split()))

d = [0] * 100

d[0] = array[0]
d[1] = max(array[0], array[1])

# i번째 식량창고
for i in range(2, n):
    d[i] = max(d[i-1], d[i-2]+array[i])

print(d[n-1])

